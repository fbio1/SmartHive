 #include <ArduinoJson.h>
#include <FirebaseArduino.h>
#include <ESP8266WiFi.h>
#include <Ticker.h>
#include <math.h>

#define FIREBASE_HOST "https://smartbee-3239b.firebaseio.com"
#define FIREBASE_AUTH "IxddEtiFdye5jwiuqqGOt0xhr0PrsVKVEWYwV1Tx"
#define PUBLISH_INTERVAL 2000

#define WIFI_SSID "Quaresma"
#define WIFI_PASSWORD "15081967"

float temperatura = 0;

Ticker ticker;
bool publishNewState = true;

void publish() {
  publishNewState = true;
}

void setup() {
  // put your setup code here, to run once:
  connectWifi();


}

void loop() {
  // put your main code here, to run repeatedly:
  if (publishNewState) {
    Serial.println("Publish new State");

    temperatura = tempRead();
    Serial.print("Temperatura = ");
    Serial.print(temperatura);
    Serial.println(" *C");
    if (!isnan(temperatura)) {
      // Manda para o firebase
      Firebase.pushFloat("temperature", temperatura);
      publishNewState = false;
    } else {
      Serial.println("Error Publishing");
    }
  }

}

void connectWifi() {
  Serial.begin(115200);
  delay(10);

  // We start by connecting to a WiFi network

  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void pinSetup() {
  //  pinMode(ledPin, OUTPUT);
  //  pinMode(ledPin2, OUTPUT);
  //  pinMode(ledPin3, OUTPUT);
  //  pinMode(ventoinha, OUTPUT);
  //  pinMode(presenca2, OUTPUT);
  //  pinMode(buzzer, OUTPUT);
  //  pinMode(presenca, INPUT);
  //
  //  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  //  Firebase.setBool("led", false);
  //  Firebase.setBool("led2", false);
  //  Firebase.setBool("led3", false);
  //  Firebase.setBool("presence", false);
  //  Firebase.setBool("presence_switch", false);
  //  Firebase.setBool("arCondicionado", false);
  //
  //  // Registra o ticker para publicar de tempos em tempos
  //  ticker.attach_ms(PUBLISH_INTERVAL, publish);
}

